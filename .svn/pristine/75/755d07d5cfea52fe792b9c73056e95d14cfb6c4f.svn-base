import { Component, OnInit, Output, EventEmitter, Input, OnDestroy } from '@angular/core';
import { changeSearchFlowSignClass } from '../search-change-form/search-change-form.component';
import { FormSign } from '../../allform/reviewform/reviewform-detail-delform/reviewform-detail-delform.component';
import { GetApiDataServiceService } from 'src/app/Service/get-api-data-service.service';
import { formatDateTime, getapi_formatTimetoString } from 'src/app/UseVoid/void_doFormatDate';
import { takeWhile } from 'rxjs/operators';
import { ShiftRoteFlowAppsDetailClass } from 'src/app/Models/ShiftRoteFlowAppsDetailClass';
import { NgxSpinnerService } from 'ngx-spinner';

declare let $: any; //use jquery

@Component({
  selector: 'app-search-change-detail-dr',
  templateUrl: './search-change-detail-dr.component.html',
  styleUrls: ['./search-change-detail-dr.component.css']
})
export class SearchChangeDetailDRComponent implements OnInit, OnDestroy {
  ngOnDestroy(): void {
    // throw new Error("Method not implemented.");
    this.api_subscribe = false;
  }
  api_subscribe = true; //ngOnDestroy時要取消訂閱api的subscribe

  @Output() goback: EventEmitter<number> = new EventEmitter<number>();//回列表

  @Input() getChangeDataTitle: changeSearchFlowSignClass

  showFormSign: FormSign[] = [];

  constructor(private GetApiDataServiceService: GetApiDataServiceService, 
    private LoadingPage: NgxSpinnerService,) { }

  ShiftRoteFlowAppsDetailArray: ShiftRoteFlowAppsDetailClass[]
  ngOnInit() {

    this.GetApiDataServiceService.getWebApiData_GetShiftFlowAppsByProcessFlowID(this.getChangeDataTitle.ProcessFlowID)
      .pipe(takeWhile(() => this.api_subscribe))
      .subscribe(
        x => {
          this.ShiftRoteFlowAppsDetailArray = []
          for (let Rote of x[0].ShiftRoteFlowAppsDetail) {
            this.ShiftRoteFlowAppsDetailArray.push({
              ShiftRoteDate: formatDateTime(Rote.ShiftRoteDate).getDate,
              RoteID1: Rote.RoteID1,
              RoteCode1: Rote.RoteCode1,
              RoteName1: Rote.RoteName1,
              RoteID2: Rote.RoteID2,
              RoteCode2: Rote.RoteCode2,
              RoteName2: Rote.RoteName2
            })
          }

        }
      )

    //歷程主管意見多筆資料
    this.GetApiDataServiceService.getWebApiData_GetFormSign(this.getChangeDataTitle.ProcessFlowID)
      .subscribe(
        (x_GetFormSigns: FormSign[]) => {
          this.showFormSign = []
          for (let x_GetFormSign of x_GetFormSigns) {
            this.showFormSign.push({
              DeptNameC: x_GetFormSign.DeptNameC,
              EmpCode: x_GetFormSign.EmpCode,
              EmpID: x_GetFormSign.EmpID,
              EmpNameC: x_GetFormSign.EmpNameC,
              JobName: x_GetFormSign.JobName,
              Key1: x_GetFormSign.Key1,
              Key2: x_GetFormSign.Key2,
              NodeName: x_GetFormSign.NodeName,
              Note: x_GetFormSign.Note,
              ProcessFlowID: x_GetFormSign.ProcessFlowID,
              SignDate: formatDateTime(x_GetFormSign.SignDate).getDate + ' ' + getapi_formatTimetoString(formatDateTime(x_GetFormSign.SignDate).getTime)
            })
          }
        },
        (error) => {
          alert('與api取得資料錯誤，GetFormSign')
          // console.log(error)
        }
      )
  }
  onCheckCollapseInpostOpinions() {
    //確認是否收合歷程主管簽核意見
    if (!$('#' + 'mangText').hasClass('collapse in')) {
      $('#' + 'mangText' + '_text').text('收合')
      $('#' + 'mangText' + '_img').css({ "transition": "transform 0.5s" });
      $('#' + 'mangText' + '_img').css({ "transform": "rotate(-180deg)" });

    } else {
      $('#' + 'mangText' + '_text').text('展開')
      $('#' + 'mangText' + '_img').css({ "transition": "transform 0.5s" });
      $('#' + 'mangText' + '_img').css({ "transform": "rotate(0deg)" });
    }
  }
  previouspage() {
    //回列表
    this.goback.emit();
  }

  /**
   * @todo 抽單
   */
  Cancelform_Click() {
    // console.log(this.SearchMan.EmpCode)
    // console.log(this.takeForm.ProcessFlowID)
    var ListProcessFlowID = this.getChangeDataTitle.ProcessFlowID
    this.LoadingPage.show()

    this.GetApiDataServiceService.getWebApiData_TakeSetFlowState(this.getChangeDataTitle.EmpCode, ListProcessFlowID)
      .pipe(takeWhile(() => this.api_subscribe))
      .subscribe(
        x => {
          if (x) {
            // this.changeSearchFlowSign.splice(this.changeSearchFlowSign.indexOf(this.takeForm), 1)
            this.getChangeDataTitle.State = '7'
            $('#sussesdialog').modal('show')
          }
          this.LoadingPage.hide()
        },
        error => {
          this.LoadingPage.hide()
          alert('與api連線異常，getWebApiData_TakeSetFlowState')
        }
      )
  }
}
