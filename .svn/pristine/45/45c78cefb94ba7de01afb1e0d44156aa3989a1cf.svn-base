import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { UUID } from 'angular2-uuid';
import { GetApiDataServiceService } from 'src/app/Service/get-api-data-service.service';
import { CaUserClass } from 'src/app/Models/CaUserClass';
import { GetApiUserService } from 'src/app/Service/get-api-user.service';
import { NgxSpinnerService } from 'ngx-spinner';
declare var OAuthPath
declare var _redirect_uri_LinkOuthpage

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {

  loading = false;

  account: string;
  password: string;
  constructor(private route: Router,
    private GetApiDataServiceService: GetApiDataServiceService,
    private GetApiUserService:GetApiUserService,
    private LoadingPage: NgxSpinnerService,) { }

  ngOnInit() {
    // this.login()
    this.NOLogin()
  }
  
  NOLogin(){
    localStorage.setItem('apiState', '12345')
    localStorage.setItem('FirstLoginUserID', '644488')
    localStorage.setItem('NowLoginUserID', '644488')
    this.route.navigate(['/nav']);
  }

  

  login() {

    // var _url = window.location.href
    // var _arr = _url.split("/");
    // var _result = _arr[0] + "//" + _arr[2]
    // var _redirect_uri = _result+'/LinkOuthpageComponent'

    var guid = UUID.UUID();

    
    // var URL = OAuthPath+'?'
    // URL += 'authorizeURL=authorize.aspx'
    // URL += "&response_type=code";                  // OAuth 2.0 Response Type value that determines the authorization processing flow to be used.
    // URL += "&scope=openid";                        // OpenID  Connect requests MUST contain the openid scope value.
    // URL += "&client_id=t4Ev4xhBABswPSkXIwBn";               // OAuth 2.0 Client Identifier
    // URL += `&state=${guid}`;        // Opaque value used to maintain state between the request and the callback.
    // URL += "&redirect_uri="+_redirect_uri_LinkOuthpage;         // Redirection URI to which the response will be sent.

    var URL = OAuthPath+'?'
    URL += 'authorizeURL=authorize.aspx'
    URL += "&response_type=code";                  // OAuth 2.0 Response Type value that determines the authorization processing flow to be used.
    URL += "&scope=openid";                        // OpenID  Connect requests MUST contain the openid scope value.
    URL += "&client_id=abc";               // OAuth 2.0 Client Identifier
    URL += `&state=${guid}`;        // Opaque value used to maintain state between the request and the callback.
    URL += "&redirect_uri="+_redirect_uri_LinkOuthpage;         // Redirection URI to which the response will be sent.
    
    localStorage.setItem('apiState', guid.toString())
    window.location.href = URL;
  }

}
