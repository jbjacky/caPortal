import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-test-write',
  templateUrl: './test-write.component.html',
  styleUrls: ['./test-write.component.css']
})
export class TestWriteComponent implements OnInit {

  constructor() { }
  title = ['修正系統', '開發', '修正UI', '優化']
  writeTest: testClass[] = [
    {
      version: 'v1.1',
      editArray: [{
        date: '2019/02/25',
        issue: [{
          action: '修正系統',
          state: true,
          page: '首頁',
          content: '上面藍底的審核區塊點了不能連到審核'
        }, {
          action: '修正系統',
          state: true,
          page: '填寫-考勤異常確認單',
          content: "考勤異常人已選擇別人，選擇填寫後，考勤異常人卻還是自己"
        }, {
          action: '修正系統',
          state: true,
          page: '填寫-請假單',
          content: "點選起始日期和結束日期的月曆，跳出api連線錯誤，absIntegrationHandlerGetabsFlowApps"
        }, {
          action: '修正系統',
          state: true,
          page: '個人表單查詢',
          content: "原表單僅填寫實際到勤時間，但查詢表單卻有顯示實際離勤時間"
        }, {
          action: '修正UI',
          state: true,
          page: '首頁',
          content: '審核的藍底區塊，點數字可以連過去就好，不要有浮起來的邊框效果'
        }, {
          action: '修正UI',
          state: true,
          page: '填寫-請假單',
          content: "如果填寫送出時有資訊有誤，在錯誤訊息之後，表單的請假日期會變回預設的當日(不是剛剛選好的日期)，請問可以保留已填寫的請假日期嗎?不然不小心某些地方點錯又要重選日期"
        }, {
          action: '修正UI',
          state: true,
          page: '填寫-請假單',
          content: "填寫完收合成時段卡時，內容請上下置中(現在偏上)，行距也要調大(10px)，新增更多差假時段旁邊的+號icon要可以按"
        }, {
          action: '修正UI',
          state: true,
          page: '審核-列表頁',
          content: "三個按鈕的間距太寬，5px即可，按鈕組離左右邊的距離為42px(現在太寬)"
        }, {
          action: '修正UI',
          state: true,
          page: '審核-列表頁',
          content: "disable樣式為灰底(#e0e0e0)白字"
        },
        ]
      },
      {
        date: '2019/02/26',
        issue: [{
          action: '修正系統',
          state: false,
          page: '填寫-請假單',
          content: "最後確認明細部分，假種跟差假原因位置上下相反"
        },
        ]
      }
      ]
    }
  ]
  ngOnInit() {
    for (let aa of this.writeTest) {
      aa.editArray.sort(
        (a: any, b: any) => {
          var aDate: any = new Date(a.date)
          var bDate: any = new Date(b.date)
          return bDate - aDate
        }
      )
    }

    this.writeTest.sort(
      (a: any, b: any) => {
        var aV = a.version.split('v')
        var bV = b.version.split('v')
        var aV_num = parseFloat(aV[1])
        var bV_num = parseFloat(bV[1])

        return bV_num - aV_num
      }
    )
  }

}
class testClass {
  version: string
  editArray: Array<editArray>
}
class editArray {
  date: string
  issue: Array<issueClass>
}
class issueClass {
  action: string
  state: boolean
  page: string
  content: string
}