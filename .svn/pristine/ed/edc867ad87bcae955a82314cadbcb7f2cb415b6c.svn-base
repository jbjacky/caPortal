import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { drawCalendarClass, SearchMan } from 'src/app/Models/CalendarClass';
import { GetApiUserService } from 'src/app/Service/get-api-user.service';
import { GetApiDataServiceService } from 'src/app/Service/get-api-data-service.service';
import { GetAttendCalendarClass } from 'src/app/Models/PostData_API_Class/GetAttendCalendarClass';
import { takeUntil, takeWhile } from 'rxjs/operators';
import { formatDateTime } from 'src/app/UseVoid/void_doFormatDate';
import { NgxSpinnerService } from 'ngx-spinner';
declare let $: any; //use jquery

@Component({
  selector: 'app-own-search-rote',
  templateUrl: './own-search-rote.component.html',
  styleUrls: ['./own-search-rote.component.css']
})
export class OwnSearchRoteComponent implements OnInit, AfterViewInit, OnDestroy {
  ngOnDestroy(): void {
    // throw new Error("Method not implemented.");
    this.api_subscribe = false;
  }
  api_subscribe = true
  ngAfterViewInit(): void {
    var currentYear = new Date().getFullYear();
    $("#id_bt_startday").change(function () {
      $("#id_ipt_startday").val($("#id_bt_startday").val())
    });
    $('#id_bt_startday').dateDropper({
      format: "Y/m",
      lang: 'zh',
      large: false,
      minYear: currentYear - 1,
      maxYear: currentYear + 1,
      large_class: 'picker-lg',
      bt_large: false,
    });
  }

  MonthMask(): {
    mask: Array<string | RegExp>;
    keepCharPositions: boolean;
  } {
    return {
      mask: [/[2]/, /[0]/, /\d/, /\d/, '/', /[0-1]/, /\d/],
      keepCharPositions: true,
    };
  }
  constructor(
    private GetApiUserService: GetApiUserService,
    private GetApiDataServiceService: GetApiDataServiceService,
    private LoadingPage: NgxSpinnerService) { }

  ngOnInit() {

    this.GetApiUserService.counter$.subscribe(
      x => {
        this.SearchMan.jobID = x.EmpCode
        if (x.EmpNameC) {
          this.SearchMan.name = x.EmpNameC;
        } else {
          this.SearchMan.name = x.EmpNameE;
        }
      })
    var drawCalendar = {
      Year: '',
      Month: '',
      dateworks: []
    }
    this.Be_RoteApiData$.next(drawCalendar)
  }

  SearchMan: SearchMan = { jobID: '', name: '' }
  private Be_RoteApiData$: BehaviorSubject<any> = new BehaviorSubject<any>(0);
  Ob_RoteApiData$: Observable<any> = this.Be_RoteApiData$;
  search() {
    var checkYear = $('#id_ipt_startday').val().split('/')[0];
    var checkMonth = $('#id_ipt_startday').val().split('/')[1];
    var MonthFirstDate = new Date(checkYear, checkMonth, 1).getDate()
    var MonthEndDate = new Date(checkYear, checkMonth, 0).getDate()
    var searchFirstDate = checkYear + '/' + checkMonth + '/' + MonthFirstDate
    var searchEndDate = checkYear + '/' + checkMonth + '/' + MonthEndDate
    // alert(searchFirstDate.toString() + '\n' + searchEndDate.toString())
    this.LoadingPage.show()
    var GetAttendCalendar: GetAttendCalendarClass = {
      DateB: searchFirstDate.toString(),
      DateE: searchEndDate.toString(),
      EmpID: this.SearchMan.jobID
    }
    this.GetApiDataServiceService.getWebApiData_GetAttendCalendar(GetAttendCalendar)
      .pipe(takeWhile(() => this.api_subscribe))
      .subscribe(
        (x: any) => {
          // console.log(x);
          if (x) {
            var drawCalendar: drawCalendarClass = new drawCalendarClass();
            drawCalendar.Year = checkYear
            drawCalendar.Month = checkMonth
            drawCalendar.SearchMan = this.SearchMan
            drawCalendar.dateworks = []
            for (let data of x) {
              var todayVa: boolean = false
              var todayAtterror: boolean = false
              var todayHoliday :boolean = false
              if (data.AbsFlowAppsDetail) {
                todayVa = true
              }
              if (data.LateMins > 0 || data.EarlyMins > 0 || data.ForgetCard > 0) {
                todayAtterror = true
              }
              if(data.ActualRote.RoteNameC=='例假日' || data.ActualRote.RoteNameC=='休息日' || data.ActualRote.RoteNameC=='國定假日'){
                todayHoliday = true
              }
              drawCalendar.dateworks.push({
                daytext: formatDateTime(data.AttendDate).getDate,
                showText: '',
                routeName: data.ActualRote.RoteCode + data.ActualRote.RoteNameC,
                onTime: data.ActualRote.OnTime,
                offTime: data.ActualRote.OffTime,
                isVa: todayVa,
                isAtterror: todayAtterror,
                isHoliday:todayHoliday
              })

              this.Be_RoteApiData$.next(drawCalendar)
              this.LoadingPage.hide()
            }
          } else {
            alert('查無出勤資料')
            this.LoadingPage.hide()
          }
        },error=>{
          alert('與api連線錯誤，getWebApiData_GetAttendCalendar')
          this.LoadingPage.hide()

        }
      )

    // var drawCalendar: drawCalendarClass = {
    //   Year: checkYear,
    //   Month: checkMonth,
    //   dateworks: [{
    //     daytext: '2019/01/05',
    //     showText: '',
    //     routeName: '1205ABC',
    //     onTime: '1205',
    //     offTime: '1700',
    //     isVa: false,
    //     isAtterror: true,
        // isHoliday:false
    //   }, {
    //     daytext: '2019/01/08',
    //     showText: '',
    //     routeName: '1201ABC',
    //     onTime: '1201',
    //     offTime: '1700',
    //     isVa: true,
    //     isAtterror: false,
        // isHoliday:false
    //   }, {
    //     daytext: '2019/01/10',
    //     showText: '',
    //     routeName: '1201ABC',
    //     onTime: '1201',
    //     offTime: '1700',
    //     isVa: false,
    //     isAtterror: false,
        // isHoliday:false
    //   }, {
    //     daytext: '2019/01/16',
    //     showText: '',
    //     routeName: '1201ABC',
    //     onTime: '1201',
    //     offTime: '1700',
    //     isVa: true,
    //     isAtterror: true,
        // isHoliday:false
    //   }, {
    //     daytext: '2019/01/25',
    //     showText: '',
    //     routeName: '1201ABC',
    //     onTime: '1201',
    //     offTime: '1700',
    //     isVa: true,
    //     isAtterror: false,
        // isHoliday:false
    //   }, {
    //     daytext: '2019/01/21',
    //     showText: '',
    //     routeName: '1220_ABC',
    //     onTime: '1220',
    //     offTime: '1700',
    //     isVa: false,
    //     isAtterror: true,
        // isHoliday:false
    //   }, {
    //     daytext: '2019/01/27',
    //     showText: '',
    //     routeName: '1227ABC',
    //     onTime: '1227',
    //     offTime: '1700',
    //     isVa: true,
    //     isAtterror: true,
        // isHoliday:false
    //   }],
    //   SearchMan: this.SearchMan
    // }
    // this.Be_RoteApiData$.next(drawCalendar)
  }

}
