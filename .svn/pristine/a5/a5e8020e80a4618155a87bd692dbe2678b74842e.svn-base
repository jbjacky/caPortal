import { Component, OnInit, AfterContentInit } from '@angular/core';
import { ExportExcelService } from 'src/app/Service/export-excel.service';
import { timeZone_tw, doFormatDate } from 'src/app/UseVoid/void_doFormatDate';
import { GetApiDataServiceService } from 'src/app/Service/get-api-data-service.service';
import { GetAttendWishClass } from 'src/app/Models/PostData_API_Class/GetAttendWishClass';
import { isValidDate } from 'src/app/UseVoid/void_isVaildDatetime';
declare var $;

@Component({
  selector: 'app-remarks',
  templateUrl: './remarks.component.html',
  styleUrls: ['./remarks.component.css']
})
export class RemarksComponent implements OnInit, AfterContentInit {
  errorSearchDateState = {state:false,errorString:''};
  onClick() {
    this.OtRowList = []
    var searchDate = $('#id_ipt_startday').val()
    var dept = $('#select_dept').val()
    if(searchDate.length == 0){
      this.errorSearchDateState = {state:true,errorString:'請輸入查詢日期'} 
      $("#id_ipt_startday").addClass("errorInput");
    }else if (!isValidDate(searchDate)) {
      this.errorSearchDateState = {state:true,errorString:'日期格式錯誤'}
      $("#id_ipt_startday").addClass("errorInput");
    }else{
      this.errorSearchDateState = {state:false,errorString:''}
      $("#id_ipt_startday").removeClass("errorInput");
    this.GetApiDataServiceService.getWebApiData_GetBaseByDeptID(dept).subscribe(
      (x: any) => {
        var searchEmpID = []
        for (let data of x) {
          searchEmpID.push(data.EmpCode)
        }
        var GetAttendWish: GetAttendWishClass = {
          DateB: searchDate,
          DateE: searchDate,
          WishTypeID: this.chooseRadio.toString(),
          ListState: ['1'],
          ListEmpID: searchEmpID
        }
        // console.log(searchEmpID)
        this.GetApiDataServiceService.getWebApiData_GetAttendWish(GetAttendWish).subscribe(
          (x: any) => {
            // console.log(x)
            this.clickSearch++
            if (x.length == 0) {
              $('#remarksTable').DataTable().clear().rows.add(this.OtRowList).draw();
            }else{

              for (let data of x) {
                var dateB = new Date(data.DateTimeB)
                var DateTimeB = timeZone_tw(dateB)
                var dateE = new Date(data.DateTimeE)
                var DateTimeE = timeZone_tw(dateE)
  
                var DateB_doFormatDate = doFormatDate(DateTimeB.toString())
                var DateE_doFormatDate = doFormatDate(DateTimeE.toString())
  
                var TimeB_Hour = ''
                var TimeB_Minute = ''
                var TimeE_Hour = ''
                var TimeE_Minute = ''
                if (DateTimeB.getHours() < 10) {
                  TimeB_Hour = '0' + DateTimeB.getHours().toString()
                } else {
                  TimeB_Hour = DateTimeB.getHours().toString()
                }
                if (DateTimeB.getMinutes() < 10) {
                  TimeB_Minute = '0' + DateTimeB.getMinutes().toString()
                } else {
                  TimeB_Minute = DateTimeB.getMinutes().toString()
                }
                if (DateTimeE.getHours() < 10) {
                  TimeE_Hour = '0' + DateTimeE.getHours().toString()
                } else {
                  TimeE_Hour = DateTimeE.getHours().toString()
                }
                if (DateTimeE.getMinutes() < 10) {
                  TimeE_Minute = '0' + DateTimeE.getMinutes().toString()
                } else {
                  TimeE_Minute = DateTimeE.getMinutes().toString()
                }
                var TimeB = TimeB_Hour + ':' + TimeB_Minute
                var TimeE = TimeE_Hour + ':' + TimeE_Minute
  
                this.OtRowList.push({
                  sysid: data.AttendWishID,
                  EmpCode: data.EmpCode,
                  EmpName: data.EmpNameC,
                  Category: data.WishTypeName,
                  StartDate: DateB_doFormatDate + ' ' + TimeB,
                  EndDate: DateE_doFormatDate + ' ' + TimeE,
                  RemarkString: data.Note
                })
                console.log(this.OtRowList)
  
  
              }
              
              $('#remarksTable').DataTable().clear().rows.add(this.OtRowList).draw();
              $('#remarksTable').DataTable().clear().rows.add(this.OtRowList).draw();
            }
          }
        )
      }
    )
    }

    // this.OtRowList = [
    //   { sysid: 1, EmpCode: '777777', EmpName: '李大仁', Category: '加班', StartDate: '2019/01/15 10:00', EndDate: '2019/01/15 18:00', RemarkString: '原1030A欲RQ10A謝謝領導' },
    //   { sysid: 2, EmpCode: '777777', EmpName: '李大仁', Category: '加班', StartDate: '2019/01/15 10:00', EndDate: '2019/01/15 18:00', RemarkString: '原1030A欲RQ10A謝謝領導' },
    //   { sysid: 3, EmpCode: '777777', EmpName: '李大仁', Category: '加班', StartDate: '2019/01/15 10:00', EndDate: '2019/01/15 18:00', RemarkString: '原1030A欲RQ10A謝謝領導' },
    //   { sysid: 4, EmpCode: '777777', EmpName: '李大仁', Category: '加班', StartDate: '2019/01/15 10:00', EndDate: '2019/01/15 18:00', RemarkString: '原1030A欲RQ10A謝謝領導' },
    //   { sysid: 5, EmpCode: '777777', EmpName: '李大仁', Category: '加班', StartDate: '2019/01/15 10:00', EndDate: '2019/01/15 18:00', RemarkString: '原1030A欲RQ10A謝謝領導' },
    //   { sysid: 6, EmpCode: '777777', EmpName: '李大仁', Category: '加班', StartDate: '2019/01/15 10:00', EndDate: '2019/01/15 18:00', RemarkString: '原1030A欲RQ10A謝謝領導' },
    //   { sysid: 7, EmpCode: '777777', EmpName: '李大仁', Category: '加班', StartDate: '2019/01/15 10:00', EndDate: '2019/01/15 18:00', RemarkString: '原1030A欲RQ10A謝謝領導' },
    //   { sysid: 8, EmpCode: '777777', EmpName: '李大仁', Category: '加班', StartDate: '2019/01/15 10:00', EndDate: '2019/01/15 18:00', RemarkString: '原1030A欲RQ10A謝謝領導' },
    // ]
    // $('#remarksTable').DataTable().clear().rows.add(this.OtRowList).draw();

  }

  ngAfterContentInit(): void {

    var currentYear = new Date().getFullYear();
    $('#id_bt_startday').dateDropper({
      format: "Y/m/d",
      lang: 'zh',
      large: true,
      minYear: currentYear - 1,
      maxYear: currentYear + 1,
      large_class: 'picker-lg',
      bt_large: false
    });
    $("#id_bt_startday").change(function () {
      $("#id_ipt_startday").val($("#id_bt_startday").val())
    });
    // $('#remarksTable').DataTable().destroy();
    this.bindDataTable();
  }

  bindDataTable() {

    var table = $('#remarksTable').DataTable({
    });
    table.destroy();

    table = $('#remarksTable').DataTable({
      data: this.OtRowList,
      columnDefs: [{ "searchable": false, "orderable": false, "visible": false, targets: 'no-sort' }],

      columns: [
        // {
        //   data: "sysid",
        //   render: function (data, type, obj, meta) {
        //     return '<input type="checkbox" id="' + data + '">';
        //   },
        //   width: "10%",
        //   sorting: false,
        //   orderable: false,
        //   class: 'qwe'
        // },
        {
          title: "工號", data: "EmpCode", sorting: false, orderable: false
          // , render: function (data, type, row, meta) {
          //   if (row.qwe != null) {
          //     return row.qwe
          //   }
          //   return row.id
          // }
        },
        {
          title: "姓名", data: "EmpName", sorting: false,
        },
        {
          title: "類別", data: "Category", sorting: false,
        },
        {
          title: "開始日期", data: "StartDate"
        },
        {
          title: "結束日期", data: "EndDate"
        },
        {
          title: "備註", data: "RemarkString", sorting: false,
        }
      ],
      scrollY: "500px",
      scrollX: true,
      searching: false,
      info: false,
      scrollCollapse: true,
      paging: true,
      lengthChange: false,
      iDisplayLength: 10,  //預設顯示比數
      language: {
        zeroRecords: "",
        emptyTable: "查無資料",
        paginate: {
          previous: "<",
          next: ">"
        }
      },
    });


    new $.fn.dataTable.FixedColumns(table, {
      leftColumns: 3,
      heightMatch: 'auto'
    });
  }
  OtRowList = []
  clickSearch = 0;
  radiogroup: any = [
    { id: 0, name: '全部顯示' },
    { id: 2, name: '加班意願' },
    { id: 3, name: '調班意願' },
    { id: 1, name: '請假意願' }
  ];
  chooseRadio: number = 0;
  constructor(private excelService: ExportExcelService, private GetApiDataServiceService: GetApiDataServiceService) { }
  selectDept = []
  ngOnInit() {
    // for (let i = 0; i < 30; i++) {
    //   var startDates = new Date();
    //   var endDates = new Date();
    //   startDates.setDate(startDates.getDate() - this.getRandomInt(1, 100))
    //   endDates.setDate(endDates.getDate() + this.getRandomInt(1, 100))
    //   var random_startDates = doFormatDate(timeZone_tw(startDates))
    //   var random_endDates = doFormatDate(timeZone_tw(endDates))

    //   this.OtRowList.push({ sysid: i, EmpCode: this.getRandomInt(600000, 699999), EmpName: '李大仁', Category: '加班', StartDate: random_startDates + ' 10:00', EndDate: random_endDates + ' 18:00', RemarkString: '原1030A欲RQ10A謝謝領導' })

    // }
    this.GetApiDataServiceService.getWebApiData_GetDeptaByDeptTree().subscribe(
      (x: any) => {
        for (let data of x) {
          this.selectDept.push({ DeptID: data.DeptID, DeptNameC: data.DeptNameC })
        }
      }
    )
  }
  onChange(e) {

  }
  getRandomInt(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min)) + min;
  }

  onExportExcel() {
    var exportData = []
    for (let OtRow of this.OtRowList) {
      exportData.push({
        工號: OtRow.EmpCode,
        姓名: OtRow.EmpName,
        類別: OtRow.Category,
        開始日期: OtRow.StartDate,
        結束日期: OtRow.EndDate,
        備註: OtRow.RemarkString
      })
    }
    this.excelService.exportAsExcelFile(exportData, 'sample');
  }
  visibility() {
    if (this.OtRowList.length > 0) {
      return 'visible'
    } else {
      return 'hidden'
    }
  }

  dayMask(): {
    mask: Array<string | RegExp>;
    keepCharPositions: boolean;
  } {
    return {
      mask: [/[2]/, /[0]/, /\d/, /\d/, '/', /[0-1]/, /\d/, '/', /[0-3]/, /\d/],
      keepCharPositions: true,
    };
  }
}

