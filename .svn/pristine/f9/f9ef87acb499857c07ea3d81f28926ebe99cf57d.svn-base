import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';
import { GetApiDataServiceService } from '../../Service/get-api-data-service.service'
import { GetApiUserService } from 'src/app/Service/get-api-user.service';
import { GetDeptaByEmpClass } from 'src/app/Models/PostData_API_Class/GetDeptaByEmpClass';
declare var $;
@Component({
  selector: 'app-testselectbox',
  templateUrl: './testselectbox.component.html',
  styleUrls: ['./testselectbox.component.css'],
  providers: [GetDeptaByEmpClass]
})
export class TestselectboxComponent implements OnInit {

  base = []
  searchVal: any;
  errorState = { show: false, errorString: '' }
  api_sendEmpCode = '' //測試工號
  constructor(private httpPostService: GetApiDataServiceService, private GetApiUserService: GetApiUserService) {
  }

  ngOnInit() {
    this.GetApiUserService.counter$.subscribe(x => {
      this.api_sendEmpCode = x.EmpCode
    })
  }
  search(searchVal) {
    // console.log(searchVal.length)
    this.errorState.show = false;
    this.base = []
    if (searchVal) {
      if (searchVal.length >= 2) {
        var GetDeptaByEmpClass: GetDeptaByEmpClass = {
          EmpCode: this.api_sendEmpCode,
          DeptID: 0,
          Level: 9,
          DeptNameKey: '',
          EmpCodeOrNameKey: searchVal,
          EffectDate: ''
        }
        this.httpPostService.getWebApiData_GetDeptaByEmp(GetDeptaByEmpClass).subscribe((x: any) => {
          if (x.length > 0) {
            this.pushBase(x);
            if (this.base.length != 0) {
            } else {
              var GetDeptaByEmpClass: GetDeptaByEmpClass = {
                EmpCode: this.api_sendEmpCode,
                DeptID: 0,
                Level: 9,
                DeptNameKey: searchVal,
                EmpCodeOrNameKey: '',
                EffectDate: ''
              }
              this.httpPostService.getWebApiData_GetDeptaByEmp(GetDeptaByEmpClass).subscribe((y: any) => {
                if (y.length > 0) {
                  this.pushBase(y);
                  if (this.base.length == 0) {
                    // alert('此條件查不到員工')
                    this.errorState.show = true;
                    this.errorState.errorString = '此條件查不到員工'
                  }
                  console.log(y)
                } else {
                  // alert('此條件查不到員工!!')
                  this.errorState.show = true;
                  this.errorState.errorString = '此條件查不到員工'
                }
              })
            }
          }
        })
      } else {
        // alert('請輸入2個字元以上')
        this.errorState.show = true;
        this.errorState.errorString = '請輸入2個字元以上'
      }
    }
    else {
      // alert('請不要空白')
      this.errorState.show = true;
      this.errorState.errorString = '請不要空白'
    }
  }
  pushBase(x) {
    for (let i = 0; i < x.length; i++) {
      if (x[i].Dept.length > 0) {
        for (let k = 0; k < x[i].Dept.length; k++) {
          if (x[i].Dept[k].Base.length > 0) {
            for (let u = 0; u < x[i].Dept[k].Base.length; u++) {
              if (x[i].Dept[k].Base[u].EmpNameC == null) {
                this.base.push({ Dept: x[i].Dept[k].DeptNameC, EmpCode: x[i].Dept[k].Base[u].EmpCode, EmpNameC: x[i].Dept[k].Base[u].EmpNameE })
              } else {
                if (x[i].Dept[k].Base[u].EmpNameC.length == 0) {
                  this.base.push({ Dept: x[i].Dept[k].DeptNameC, EmpCode: x[i].Dept[k].Base[u].EmpCode, EmpNameC: x[i].Dept[k].Base[u].EmpNameE })
                } else {
                  this.base.push({ Dept: x[i].Dept[k].DeptNameC, EmpCode: x[i].Dept[k].Base[u].EmpCode, EmpNameC: x[i].Dept[k].Base[u].EmpNameC })
                }
              }
            }
          }
        }
      }
    }
  }


  @Output() click_saveEmptoView: EventEmitter<any> = new EventEmitter<any>();//選到的員工回傳
  onClick(base) {
    var baseIdandName = base.EmpCode + '，' + base.EmpNameC
    this.click_saveEmptoView.emit(baseIdandName)
  }


}
