import { Component, OnInit, Output, EventEmitter, Input, OnDestroy } from '@angular/core';
import { forgetSearchFlowSignClass } from '../search-forget-form/search-forget-form.component';
import { FormSign } from '../../allform/reviewform/reviewform-detail-delform/reviewform-detail-delform.component';
import { GetApiDataServiceService } from 'src/app/Service/get-api-data-service.service';
import { formatDateTime, getapi_formatTimetoString } from 'src/app/UseVoid/void_doFormatDate';
import { takeWhile } from 'rxjs/operators';
import { NgxSpinnerService } from 'ngx-spinner';
import { showUploadFileClass } from 'src/app/Models/showUploadFileClass';
import { FileDownloadService } from 'src/app/Service/file-download.service';
declare let $: any; //use jquery

@Component({
  selector: 'app-search-forget-detail',
  templateUrl: './search-forget-detail.component.html',
  styleUrls: ['./search-forget-detail.component.css']
})
export class SearchForgetDetailComponent implements OnInit , OnDestroy {
  ngOnDestroy(): void {
    // throw new Error("Method not implemented.");
    this.api_subscribe = false;
  }
  api_subscribe = true; //ngOnDestroy時要取消訂閱api的subscribe

  @Output() goback: EventEmitter<number> = new EventEmitter<number>();//回列表
  
  @Input() getForgetDataTitle: forgetSearchFlowSignClass
  showFormSign: FormSign[] = [];
  
  constructor(private GetApiDataServiceService: GetApiDataServiceService,
    private LoadingPage: NgxSpinnerService,
    private FileDownloadService: FileDownloadService,) { }

  ngOnInit() {
    //歷程主管意見多筆資料
    this.GetApiDataServiceService.getWebApiData_GetFormSign(this.getForgetDataTitle.ProcessFlowID).subscribe(
      (x_GetFormSigns: FormSign[]) => {
        this.showFormSign = []
        for (let x_GetFormSign of x_GetFormSigns) {
          this.showFormSign.push({
            DeptNameC: x_GetFormSign.DeptNameC,
            EmpCode: x_GetFormSign.EmpCode,
            EmpID: x_GetFormSign.EmpID,
            EmpNameC: x_GetFormSign.EmpNameC,
            JobName: x_GetFormSign.JobName,
            Key1: x_GetFormSign.Key1,
            Key2: x_GetFormSign.Key2,
            NodeName: x_GetFormSign.NodeName,
            Note: x_GetFormSign.Note,
            ProcessFlowID: x_GetFormSign.ProcessFlowID,
            SignDate: formatDateTime(x_GetFormSign.SignDate).getDate + ' ' + getapi_formatTimetoString(formatDateTime(x_GetFormSign.SignDate).getTime)
          })
        }
      },
      (error) => {
        alert('與api取得資料錯誤，GetFormSign')
        console.log(error)
      }
    )
  }

  
  onCheckCollapseInpostOpinions() {
    //確認是否收合歷程主管簽核意見
    if (!$('#' + 'mangText').hasClass('collapse in')) {
      $('#' + 'mangText' + '_text').text('收合')
      $('#' + 'mangText' + '_img').css({ "transition": "transform 0.5s" });
      $('#' + 'mangText' + '_img').css({ "transform": "rotate(-180deg)" });

    } else {
      $('#' + 'mangText' + '_text').text('展開')
      $('#' + 'mangText' + '_img').css({ "transition": "transform 0.5s" });
      $('#' + 'mangText' + '_img').css({ "transform": "rotate(0deg)" });
    }
  }

  previouspage() {
    //回列表
    this.goback.emit();
  }

  /**
   * @todo 抽單
   */
  Cancelform_Click() {
    // console.log(this.SearchMan.EmpCode)
    // console.log(this.takeForm.ProcessFlowID)
    var ListProcessFlowID = this.getForgetDataTitle.ProcessFlowID
    this.LoadingPage.show()

    this.GetApiDataServiceService.getWebApiData_TakeSetFlowState(this.getForgetDataTitle.EmpCode, ListProcessFlowID)
      .pipe(takeWhile(() => this.api_subscribe))
      .subscribe(
        x => {
          if (x) {
            // this.changeSearchFlowSign.splice(this.changeSearchFlowSign.indexOf(this.takeForm), 1)
            this.getForgetDataTitle.Take = false
            this.getForgetDataTitle.State = '7'
            $('#sussesdialog').modal('show')
          }
          this.LoadingPage.hide()
        },
        error => {
          this.LoadingPage.hide()
          alert('與api連線異常，getWebApiData_TakeSetFlowState')
        }
      )
  }
  
  base64(upload: showUploadFileClass) {
    // console.log(upload.ServerName)
    this.LoadingPage.show()
    this.GetApiDataServiceService.getWebApiData_GetUploadFileByOnly(upload.ServerName)
      .pipe(takeWhile(() => this.api_subscribe))
      .subscribe(
        (data: Array<any>) => {
          this.FileDownloadService.base64(data[0])
          this.LoadingPage.hide()
        }
        , error => {
          this.LoadingPage.hide()
          alert('與api連線異常，getWebApiData_GetUploadFileByOnly')
        }
      )
    // this.FileDownloadService.base64(upload);
  }
}
