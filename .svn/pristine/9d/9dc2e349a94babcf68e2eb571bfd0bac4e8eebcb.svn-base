"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var SpyngifDirective = /** @class */ (function () {
    function SpyngifDirective() {
    }
    SpyngifDirective.prototype.ngOnInit = function () {
        var currentYear = new Date().getFullYear();
        $("#id_bt_startday").change(function () {
            $("#id_ipt_startday").val($("#id_bt_startday").val());
        });
        $("#id_bt_endday").change(function () {
            $("#id_ipt_endday").val($("#id_bt_endday").val());
        });
        $("#id_bt_starttime").change(function () {
            $("#id_ipt_starttime").val($("#id_bt_starttime").val());
        });
        $("#id_bt_endtime").change(function () {
            $("#id_ipt_endtime").val($("#id_bt_endtime").val());
        });
        $('#id_bt_startday').dateDropper({
            format: "Y/m/d",
            lang: 'zh',
            large: true,
            minYear: currentYear - 1,
            maxYear: currentYear + 1,
            large_class: 'picker-lg',
            bt_large: false
        });
        $('#id_bt_endday').dateDropper({
            format: "Y/m/d",
            lang: 'zh',
            large: true,
            minYear: currentYear - 1,
            maxYear: currentYear + 1,
            large_class: 'picker-lg',
            bt_large: false
        });
        //綁定顯示時間選擇器
        $("#id_bt_starttime").val('08:00');
        $("#id_bt_starttime").timeDropper({
            format: 'HH:mm',
            autoswitch: false,
            mousewheel: true,
            setCurrentTime: false
        });
        $("#id_bt_endtime").val('17:00');
        $("#id_bt_endtime").timeDropper({
            format: 'HH:mm',
            autoswitch: false,
            mousewheel: true,
            setCurrentTime: false
        });
    };
    SpyngifDirective.prototype.ngOnDestroy = function () {
        // console.log('ngOnDestroy')
    };
    SpyngifDirective = __decorate([
        core_1.Directive({
            selector: '[appSpyngif]',
        }),
        __metadata("design:paramtypes", [])
    ], SpyngifDirective);
    return SpyngifDirective;
}());
exports.SpyngifDirective = SpyngifDirective;
//# sourceMappingURL=spyngif.directive.js.map