import { Component, OnInit, Output, EventEmitter, Input, OnDestroy } from '@angular/core';
import { changeSearchFlowSignClass } from '../search-change-form/search-change-form.component';
import { GetApiDataServiceService } from 'src/app/Service/get-api-data-service.service';
import { concatMap, takeWhile } from 'rxjs/operators';
import { doFormatDate_getMonthAndDay, formatDateTime, doFormatDate, getapi_formatTimetoString } from 'src/app/UseVoid/void_doFormatDate';
import { chinesenum } from 'src/app/UseVoid/void_chinesenumber';
import { oneP_Class, selectuiShow } from '../../allform/change-rz/change-rz.component';
import { GetAttendClass } from 'src/app/Models/PostData_API_Class/GetAttendClass';
import { FormSign } from '../../allform/reviewform/reviewform-detail-delform/reviewform-detail-delform.component';

declare let $: any; //use jquery

@Component({
  selector: 'app-search-change-detail-rz',
  templateUrl: './search-change-detail-rz.component.html',
  styleUrls: ['./search-change-detail-rz.component.css']
})
export class SearchChangeDetailRZComponent implements OnInit , OnDestroy {
  ngOnDestroy(): void {
    // throw new Error("Method not implemented.");
    this.api_subscribe = false;
  }
  api_subscribe = true; //ngOnDestroy時要取消訂閱api的subscribe

  @Output() goback: EventEmitter<number> = new EventEmitter<number>();//回列表

  @Input() getChangeDataTitle: changeSearchFlowSignClass

  oneP: oneP_Class = new oneP_Class()
  selectDay: selectuiShow
  selectChangeDay: selectuiShow
  
  
  showFormSign: FormSign[] = [];
  constructor(private GetApiDataServiceService: GetApiDataServiceService,) { }

  ngOnInit() {
    this.GetApiDataServiceService.getWebApiData_GetShiftRoteDateRange(this.getChangeDataTitle.dateArray[0], this.getChangeDataTitle.EmpID1)
    .pipe(
      concatMap(
        (x: any) => {
          var Attend: GetAttendClass = {
            DateB: x.DateA,
            DateE: x.DateD,
            ListEmpID: [this.getChangeDataTitle.EmpID1],
            ListRoteID: null
          }
          return this.GetApiDataServiceService.getWebApiData_GetAttend(Attend)
        }
      )
    )
    .pipe(takeWhile(() => this.api_subscribe))
    .subscribe(
      (x: any) => {
        // console.log(x)
        this.selectDay = null
        this.selectChangeDay = null
        this.oneP = {
          EmpCode: this.getChangeDataTitle.EmpID1,
          EmpName: this.getChangeDataTitle.EmpNameC1,
          work: []
        }
        for (let data of x) {
          var setAttendDate = doFormatDate_getMonthAndDay(formatDateTime(data.AttendDate).getDate)
          var isSelect: boolean = false
          var dataAttenDate = doFormatDate(data.AttendDate)
          var calDate = new Date(formatDateTime(data.AttendDate).getDate + ' ' + getapi_formatTimetoString(formatDateTime(data.AttendDate).getTime))
          var calDate_dayofweek = calDate.getDay()
          if (calDate_dayofweek == 0) {
            calDate_dayofweek = 7
          }
          if (dataAttenDate == this.getChangeDataTitle.dateArray[0] || dataAttenDate == this.getChangeDataTitle.dateArray[1]) {
            isSelect = true
            var showDayofWeek = ''
            if (calDate_dayofweek == 7) {
              showDayofWeek = '日'
            } else {
              showDayofWeek = chinesenum(calDate_dayofweek)
            }

            if (!this.selectDay) {

              this.selectDay = {
                date: setAttendDate,
                job: data.ActualRote.RoteCode,
                RoteName: data.ActualRote.RoteNameC,
                RoteID: data.ActualRote.RoteID,
                realdate: formatDateTime(data.AttendDate).getDate,
                isSelect: isSelect,
                dayofweek: showDayofWeek
              }
            } else {
              this.selectChangeDay = {
                date: setAttendDate,
                job: data.ActualRote.RoteCode,
                RoteName: data.ActualRote.RoteNameC,
                RoteID: data.ActualRote.RoteID,
                realdate: formatDateTime(data.AttendDate).getDate,
                isSelect: isSelect,
                dayofweek: showDayofWeek
              }
            }

          }
          this.oneP.work.push(
            {
              date: setAttendDate,
              job: data.ActualRote.RoteCode,
              realdate: formatDateTime(data.AttendDate).getDate,
              RoteName: data.ActualRote.RoteNameC,
              RoteID: data.ActualRote.RoteID,
              isSelect: isSelect,
              dayofweek: chinesenum(calDate_dayofweek)
            })
        }
        // this.SetUiChangeDate()
        // console.log(this.oneP)
      },
      (error: any) => {
        alert('與api連線異常，第一個人員，getWebApiData_GetShiftRoteDateRange')
      }
    )


    
    //歷程主管意見多筆資料
    this.GetApiDataServiceService.getWebApiData_GetFormSign(this.getChangeDataTitle.ProcessFlowID)
    .subscribe(
      (x_GetFormSigns: FormSign[]) => {
        this.showFormSign = []
        for (let x_GetFormSign of x_GetFormSigns) {
          this.showFormSign.push({
            DeptNameC: x_GetFormSign.DeptNameC,
            EmpCode: x_GetFormSign.EmpCode,
            EmpID: x_GetFormSign.EmpID,
            EmpNameC: x_GetFormSign.EmpNameC,
            JobName: x_GetFormSign.JobName,
            Key1: x_GetFormSign.Key1,
            Key2: x_GetFormSign.Key2,
            NodeName: x_GetFormSign.NodeName,
            Note: x_GetFormSign.Note,
            ProcessFlowID: x_GetFormSign.ProcessFlowID,
            SignDate: formatDateTime(x_GetFormSign.SignDate).getDate + ' ' + getapi_formatTimetoString(formatDateTime(x_GetFormSign.SignDate).getTime)
          })
        }
      },
      (error) => {
        alert('與api取得資料錯誤，GetFormSign')
        // console.log(error)
      }
    )
  }

  setDivStyle(selectData: selectuiShow) {
    if (selectData.isSelect) {
      return 'selectDiv'
    } else {
      return 'DivStyle'
    }
  }
  
  onCheckCollapseInpostOpinions() {
    //確認是否收合歷程主管簽核意見
    if (!$('#' + 'mangText').hasClass('collapse in')) {
      $('#' + 'mangText' + '_text').text('收合')
      $('#' + 'mangText' + '_img').css({ "transition": "transform 0.5s" });
      $('#' + 'mangText' + '_img').css({ "transform": "rotate(-180deg)" });

    } else {
      $('#' + 'mangText' + '_text').text('展開')
      $('#' + 'mangText' + '_img').css({ "transition": "transform 0.5s" });
      $('#' + 'mangText' + '_img').css({ "transform": "rotate(0deg)" });
    }
  }
  previouspage() {
    //回列表
    this.goback.emit();
  }
  
  /**
   * @todo 抽單
   */
  Cancelform_Click() {

  }
}
