"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var ForgetformWriteComponent = /** @class */ (function () {
    function ForgetformWriteComponent() {
        this.goWork = false; //到勤
        this.offWork = false; //離勤
        this.outputWriteforgetformChange = new core_1.EventEmitter(); //返回修改按鈕
    }
    ForgetformWriteComponent.prototype.ngOnInit = function () {
    };
    ForgetformWriteComponent.prototype.onpreviousForm = function () {
        //返回按鈕
        this.outputWriteforgetformChange.emit();
        console.log(this.outputWriteforgetformChange);
    };
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], ForgetformWriteComponent.prototype, "outputWriteforgetformChange", void 0);
    ForgetformWriteComponent = __decorate([
        core_1.Component({
            selector: 'app-forgetform-write',
            templateUrl: './forgetform-write.component.html',
            styleUrls: ['./forgetform-write.component.css']
        }),
        __metadata("design:paramtypes", [])
    ], ForgetformWriteComponent);
    return ForgetformWriteComponent;
}());
exports.ForgetformWriteComponent = ForgetformWriteComponent;
//# sourceMappingURL=forgetform-write.component.js.map